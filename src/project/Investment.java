/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author DeadTrigger
 */
public class Investment extends javax.swing.JFrame {

    /**
     * Creates new form Investment
     */
    Connection con=null;
    Statement stmt=null;
    public Investment() {
        ///
        ///         Creating Connection with data base
        ///
     String driver="oracle.jdbc.driver.OracleDriver";
     String Url= "jdbc:oracle:thin:@localhost:1521:XE";

     String user="BankProject";
   String pass="project";          
        try {
            Class.forName(driver);
        } catch (ClassNotFoundException ex) {
            System.out.println(ex);
        }
            System.out.println("Connetcting to Data base ");
       

        try {
            this.con = DriverManager.getConnection(Url, user, pass);
        } catch (SQLException ex) {
             System.out.println(ex);
        }
        try {
            this.stmt = this.con.createStatement();
        } catch (SQLException ex) {
            System.out.println(ex);
        }
        
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Subscribe = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        mTable = new javax.swing.JTable();
        DataShow = new javax.swing.JButton();
        BackBtn = new javax.swing.JButton();
        scheme = new javax.swing.JLabel();
        Collectbtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBounds(new java.awt.Rectangle(500, 200, 0, 0));

        jLabel1.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 18)); // NOI18N
        jLabel1.setText("Investment Schemes");

        Subscribe.setText("Subscribe");
        Subscribe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubscribeActionPerformed(evt);
            }
        });

        jLabel4.setText("Note: You can Invest in only in one Scheme");

        mTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Scheme Name", "Investing Amount", "Profit amount", "Days"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(mTable);

        DataShow.setText("Show Data");
        DataShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DataShowActionPerformed(evt);
            }
        });

        BackBtn.setText("Back");
        BackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(26, 265, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(199, 199, 199)
                        .addComponent(BackBtn)
                        .addGap(40, 40, 40)
                        .addComponent(Subscribe)
                        .addGap(18, 18, 18)
                        .addComponent(DataShow))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(188, 188, 188)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Subscribe)
                    .addComponent(DataShow)
                    .addComponent(BackBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(21, 21, 21))
        );

        Collectbtn.setText("Collect");
        Collectbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CollectbtnActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 18)); // NOI18N
        jLabel3.setText("Subscribed Scheme");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(Collectbtn)
                            .addComponent(scheme, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scheme, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Collectbtn)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    int count = 0;
    private void SubscribeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubscribeActionPerformed
        // TODO add your handling code here:
         try {
            // TODO add your handling code here:
            int i = mTable.getSelectedRow();
            TableModel model = mTable.getModel();
            
            String SchemeName =""+model.getValueAt(i, 0).toString();
            String investAmount =""+model.getValueAt(i, 1).toString();
            String ObtainingAmount =""+model.getValueAt(i, 2).toString();
            String Days =""+model.getValueAt(i, 3).toString();
            
            
            
            String sql1 = "select * from Customer  where UserId = '"+getUserId()+"' and Balance > "+investAmount ;
            ResultSet rs1  = stmt.executeQuery(sql1);
            if(rs1.next())
            {
            String sql3 = "select * from Customer  where UserId = '"+getUserId()+"' and scheme_name is not null" ;
            ResultSet rs3  = stmt.executeQuery(sql3);
            if(rs3.next())
            {
                 JOptionPane.showMessageDialog(this, "You can Subscribe only one at a time");
            }else {
            String sql = "Update customer set " +
"                    SCHEME_NAME =  '"+SchemeName+"'," +
"                   INVESTED_AMOUNT =  "+investAmount+"," +
"                    OBTAINING_AMOUNT ="+ ObtainingAmount+"," +
"                    Balance =Balance - "+ investAmount+"," +                    
"                   DATEOFCOLLECTION = sysdate +"+Days+"" +                
"                    where userid = '"+getUserId()+"'";
            int j = stmt.executeUpdate(sql);
            if(j>0)
            {
                JOptionPane.showMessageDialog(this, "Scheme Subscribe");
            }
            
            System.out.println(SchemeName);
            }
            } else   JOptionPane.showMessageDialog(this, "Not Enough balance");
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(Investment.class.getName()).log(Level.SEVERE, null, ex);
        }
         
         
    }//GEN-LAST:event_SubscribeActionPerformed

    private void DataShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DataShowActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
             DefaultTableModel tblModel = null;
            
           
            
            String sql1 = "Select * from customer where UserId  = '" + getUserId()+"'";
            ResultSet rs2 = stmt.executeQuery(sql1);
            if(rs2.next())
            {
                String mSchemeName = rs2.getString("SCHEME_NAME");
                scheme.setText(mSchemeName);
            }
            
             String sql = "Select * from INVESTMENT";
            ResultSet rs = stmt.executeQuery(sql);
                if(count == 0){
            while(rs.next())
            {
                System.out.println("add Table");
                String mSchemeName = rs.getString("SCHEME_NAME");
                int mInvestAmount  = rs.getInt("INVEST_AMOUNT");
                int mPrfitAmount = rs.getInt("PROFIT_AMOUNT");
                int mDays = rs.getInt("DAYS");
                
//                SimpleDateFormat dateFormat = new SimpleDateFormat("mm//dd/yyyy , HH:MM:SS , a");
//                String mDate = dateFormat.format(date);
                
                Object Row[] = {mSchemeName,mInvestAmount,mPrfitAmount,mDays};
                 tblModel = (DefaultTableModel)mTable.getModel();
               
                
                tblModel.addRow(Row);
                
                
                }
            count++;
               
                
            }
         } catch (SQLException ex) {
            Logger.getLogger(Investment.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_DataShowActionPerformed

    private void CollectbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CollectbtnActionPerformed
        try {
            // TODO add your handling code here:
            int ObtainAmount;
            String sql1 = "select * from Customer  where UserId = '"+getUserId()+"' and DATEOFCOLLECTION < SYSDATE " ;
            ResultSet rs1  = stmt.executeQuery(sql1);
            if(rs1.next())
            {
                String sql2 = "update customer SET " +
                
                "Balance =Balance+ OBTAINING_AMOUNT ," +
                "SCHEME_NAME = '',"+
                "INVESTED_AMOUNT = 0," +
                "DATEOFCOLLECTION = ''," +
                "OBTAINING_AMOUNT  = 0" +
                 "where userid = '"+getUserId()+"'";
                int j = stmt.executeUpdate(sql2);
                if(j>0)
                {
                    JOptionPane.showMessageDialog(this, "Amount collected");
                } 
            }else JOptionPane.showMessageDialog(this, "There is time to collect the Amount");
        } catch (SQLException ex) {
            Logger.getLogger(Investment.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
    }//GEN-LAST:event_CollectbtnActionPerformed

    private void BackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBtnActionPerformed
        // TODO add your handling code here:
        close();

        CustomerMainScr CMS = new CustomerMainScr();
       CMS.setName(getUserId() , ""+AccountNo());
        CMS.setVisible(true);
    }//GEN-LAST:event_BackBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Investment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Investment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Investment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Investment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Investment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackBtn;
    private javax.swing.JButton Collectbtn;
    private javax.swing.JButton DataShow;
    private javax.swing.JButton Subscribe;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable mTable;
    private javax.swing.JLabel scheme;
    // End of variables declaration//GEN-END:variables

private String UserId;

    public String getUserId() {
        return UserId;
    }

    public void setUserId(String UserId) {
        this.UserId = UserId;
    }
     public void close(){
 
 WindowEvent winClosingEvent = new WindowEvent(this,WindowEvent.WINDOW_CLOSING);
 Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosingEvent);
 
 }
      public int AccountNo()
    {
        int acc = 0;
        try {
            String sql = "Select * from customer where UserId  = '" + getUserId() + "'";
            
            ResultSet rs = stmt.executeQuery(sql);
            while(rs.next())
            {
                acc = rs.getInt("ACOUNT_NO");
            }
        } catch (SQLException ex) {
            System.out.println(ex);
        }
        return acc;
    }
}
