/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project;

import com.itextpdf.text.Document;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.*;
import javax.swing.table.DefaultTableModel;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.Phrase;

/**
 *
 * @author DeadTrigger
 */
public class CustomerStatement extends javax.swing.JFrame {
    Connection con=null;
    java.sql.Statement stmt=null;

    /**
     * Creates new form Statement
     */
    public CustomerStatement() {
        
            ///
        ///         Creating Connection with data base
        ///
     String driver="oracle.jdbc.driver.OracleDriver";
     String Url= "jdbc:oracle:thin:@localhost:1521:XE";

     String user="BankProject";
   String pass="project";          
        try {
            Class.forName(driver);
        } catch (ClassNotFoundException ex) {
            System.out.println(ex);
        }
            System.out.println("Connetcting to Data base ");
       

        try {
            this.con = DriverManager.getConnection(Url, user, pass);
        } catch (SQLException ex) {
             System.out.println(ex);
        }
        try {
            this.stmt = this.con.createStatement();
        } catch (SQLException ex) {
            System.out.println(ex);
        }
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        TableNo = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        BackBtn = new javax.swing.JButton();
        PDFfile = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBounds(new java.awt.Rectangle(400, 100, 0, 0));

        TableNo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sender", "Reciever", "Amount", "Date"
            }
        ));
        jScrollPane2.setViewportView(TableNo);

        jButton1.setText("Show data");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        BackBtn.setText("Back");
        BackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtnActionPerformed(evt);
            }
        });

        PDFfile.setText("PDF file");
        PDFfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PDFfileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BackBtn)
                .addGap(18, 18, 18)
                .addComponent(PDFfile)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGap(70, 70, 70))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(BackBtn)
                    .addComponent(PDFfile))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
     int count = 0;
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
       
        try {
            // TODO add your handling code here:

            String sql = "Select  SENDER , RECIEVER , AMOUNT , TO_CHAR(TRANS_DATE,'dd/mm/yyyy , hh:Mi:ss') as Datae from MONEYTRANSDETAIL "
                    + "where SENDER = '"+getUserId()+"'"+"Or RECIEVER = '"+getUserId()+"'ORDER by  TRANS_DATE desc ";
            ResultSet rs = stmt.executeQuery(sql);
            if(count == 0){
                while(rs.next())
                {
                    String sender = rs.getString("SENDER");
                    String Reciever  = rs.getString("RECIEVER");
                    int Amount = rs.getInt("AMOUNT");
                    String date = rs.getString("Datae");

                    Object Row[] = {sender,Reciever,Amount,date};

                    DefaultTableModel tblModel = (DefaultTableModel)TableNo.getModel();

                    tblModel.addRow(Row);

                }
                count++;

            }

        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void BackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBtnActionPerformed
        // TODO add your handling code here:
        close();

        CustomerMainScr CMS = new CustomerMainScr();
       CMS.setName(getUserId() , ""+AccountNo());
        CMS.setVisible(true);
    }//GEN-LAST:event_BackBtnActionPerformed

    private void PDFfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PDFfileActionPerformed
        // TODO add your handling code here:
         try{
    String File_Name = "D:\\Bills\\"+getUserId()+".pdf";
    Document doc = new Document();
    
    PdfWriter.getInstance(doc , new FileOutputStream(File_Name));
    
    doc.open();
    PdfPTable table = new PdfPTable(4);
    PdfPCell c1 = new PdfPCell(new Phrase("SENDER"));
    table.addCell(c1);
    
    c1 = new PdfPCell(new Phrase("RECIEVER"));
    table.addCell(c1);
    
    c1 = new PdfPCell(new Phrase("AMOUNT"));
    table.addCell(c1);
    
    c1 = new PdfPCell(new Phrase("Datae"));
    table.addCell(c1);
    
    
     String sql = "Select  SENDER , RECIEVER , AMOUNT , TO_CHAR(TRANS_DATE,'dd/mm/yyyy , hh:Mi:ss') as Datae from MONEYTRANSDETAIL "
                    + "where SENDER = '"+getUserId()+"'"+"Or RECIEVER = '"+getUserId()+"'ORDER by  TRANS_DATE desc ";
            ResultSet rs = stmt.executeQuery(sql);
            
                while(rs.next())
                {
                    String sender = rs.getString("SENDER");
                    String Reciever  = rs.getString("RECIEVER");
                    int Amount = rs.getInt("AMOUNT");
                    String date = rs.getString("Datae");
                    

                    table.addCell(sender);
                    table.addCell(Reciever);
                    table.addCell(""+Amount);
                    table.addCell(date);
                    

                }
               

            
    
    
    
    Paragraph para = new Paragraph("Statment \n\n");
    
    doc.add(para);
    doc.add(table);
    doc.close();
    System.out.println("Finished");
    
    }catch(Exception e)
    {
    System.out.println(e);
    }
    }//GEN-LAST:event_PDFfileActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerStatement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerStatement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerStatement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerStatement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerStatement().setVisible(true);
            }
        });
    }
    public String UserId;

    public String getUserId() {
        return UserId;
    }

    public void setUserId(String UserId) {
        this.UserId = UserId;
    }
    public void close(){
 
 WindowEvent winClosingEvent = new WindowEvent(this,WindowEvent.WINDOW_CLOSING);
 Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosingEvent);
 
 }
    public int AccountNo()
    {
        int acc = 0;
        try {
            String sql = "Select * from customer where UserId  = '" + getUserId() + "'";
            
            ResultSet rs = stmt.executeQuery(sql);
            while(rs.next())
            {
                acc = rs.getInt("ACOUNT_NO");
            }
        } catch (SQLException ex) {
            System.out.println(ex);
        }
        return acc;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackBtn;
    private javax.swing.JButton PDFfile;
    private javax.swing.JTable TableNo;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
